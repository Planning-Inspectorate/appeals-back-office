parameters:
  - name: deployAppealsAPI
    displayName: Deploy Appeals API
    type: boolean
    default: true
  - name: deployAppealsWeb
    displayName: Deploy Appeals Web
    type: boolean
    default: true
  - name: deployFunctionAppealsCasedataImport
    displayName: Deploy Function - Appeals Casedata Import
    type: boolean
    default: true
  - name: deployFunctionAppealsUserImport
    displayName: Deploy Function - Appeals User Import
    type: boolean
    default: true
  - name: deployFunctionAppealsDocProcessing
    displayName: Deploy Function - Appeals Document Processing
    type: boolean
    default: true
  - name: schemaMigration
    displayName: Run Database Migration
    type: boolean
    default: true

pr: none
trigger: none

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.18.1
  pipelines:
    - pipeline: build
      source: Build
      trigger:
        branches:
          include:
            - main

extends:
  template: stages/wrapper_cd.yml@templates
  parameters:
    variableGroupPrefix: 'cd'
    environments:
      - name: Dev
      - name: Test
        dependsOn:
          - Dev
      - name: Training
        dependsOn:
          - Test
      - name: Prod
        dependsOn:
          - Training
    deploymentStages:
      - name: Deploy Appeals
        deploymentJobs:
          - name: Deploy Appeals API
            condition: eq(${{ parameters.deployAppealsAPI }}, 'true')
            steps:
              - checkout: self
              - ${{ if eq(parameters.schemaMigration, true) }}:
                # kv name is different in the training env (had to be shorter)
                - bash: |
                    if [[ $ENVIRONMENT == "training" ]]; then
                      echo "Name: pins-kv-appeals-bo-train (env: $ENVIRONMENT)"
                      echo "##vso[task.setvariable variable=kvName;]pins-kv-appeals-bo-train"
                    else
                      echo "Name: pins-kv-appeals-bo-$ENVIRONMENT (env: $ENVIRONMENT)"
                      echo "##vso[task.setvariable variable=kvName;]pins-kv-appeals-bo-$ENVIRONMENT"
                    fi
                  displayName: Set KV name
                  env:
                    ENVIRONMENT: $(ENVIRONMENT)
                - template: ../steps/azure_get_secrets.yml
                  parameters:
                    keyVaultName: $(kvName)
                    secrets:
                      - name: appeals-bo-sql-admin-connection-string
                        variable: appeals-bo-sql-admin-connection-string
                - template: ../steps/node_script.yml
                  parameters:
                    nodeVersion: 20
                    environmentVariables:
                      DATABASE_URL: $(appeals-bo-sql-admin-connection-string)
                    script: npm run db:migrate:prod
                    workingDirectory: $(Build.Repository.LocalPath)/appeals/api
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-bo-api-$(ENVIRONMENT)
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: back-office/back-office-appeals-api
              - script: |
                  echo "Verifying API Version (using git hash $(resources.pipeline.build.sourceCommit))..."
                  bash ./packages/scripts/verify_commit_hash.sh "API" "https://pins-app-appeals-bo-api-$(ENVIRONMENT).azurewebsites.net/health" "$(resources.pipeline.build.sourceCommit)" 3
                displayName: API Verify Version
                failOnStderr: true
          - name: Deploy Appeals Web
            condition: eq(${{ parameters.deployAppealsWeb }}, 'true')
            steps:
              - checkout: self
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-bo-web-$(ENVIRONMENT)
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: back-office/appeals-web
              - script: |
                  echo "Verifying Web Version (using git hash $(resources.pipeline.build.sourceCommit))..."
                  bash ./packages/scripts/verify_commit_hash.sh "Web" "https://pins-app-appeals-bo-web-$(ENVIRONMENT).azurewebsites.net/health" "$(resources.pipeline.build.sourceCommit)" 3
                displayName: Web Verify Version
                failOnStderr: true
          - name: Deploy Function - Appeals Casedata Import
            condition: eq(${{ parameters.deployFunctionAppealsCasedataImport }}, 'true')
            steps:
              - download: build
                artifact: function-appeals-casedata-import
                displayName: Download function-appeals-casedata-import
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-appeals-bo-casedata-import-$(ENVIRONMENT)
                  resourceGroup: $(resourceGroup)
                  workingDirectory: $(Pipeline.Workspace)/build/function-appeals-casedata-import
          - name: Deploy Function - Appeals User Import
            condition: eq(${{ parameters.deployFunctionAppealsUserImport }}, 'true')
            steps:
              - download: build
                artifact: function-appeals-user-import
                displayName: Download function-appeals-user-import
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-appeals-bo-user-import-$(ENVIRONMENT)
                  resourceGroup: $(resourceGroup)
                  workingDirectory: $(Pipeline.Workspace)/build/function-appeals-user-import
          - name: Deploy Function - Appeals Document Processing
            condition: eq(${{ parameters.deployFunctionAppealsDocProcessing }}, 'true')
            steps:
              - download: build
                artifact: function-appeals-document-processing
                displayName: Download function-appeals-document-processing
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-appeals-bo-doc-processing-$(ENVIRONMENT)
                  resourceGroup: $(resourceGroup)
                  workingDirectory: $(Pipeline.Workspace)/build/function-appeals-document-processing
    globalVariables:
      - template: azure-pipelines-variables.yml@self
