import { Router as createRouter } from 'express';
import { appealsRoutes } from './appeals/appeals.routes.js';
import { appellantCaseIncompleteReasonsRoutes } from './appellant-case-incomplete-reasons/appellant-case-incomplete-reasons.routes.js';
import { appellantCaseInvalidReasonsRoutes } from './appellant-case-invalid-reasons/appellant-case-invalid-reasons.routes.js';
import { lpaQuestionnaireIncompleteReasonsRoutes } from './lpa-questionnaire-incomplete-reasons/lpa-questionnaire-incomplete-reasons.routes.js';
import { siteVisitRoutes } from './site-visits/site-visits.routes.js';
import { appellantCasesRoutes } from './appellant-cases/appellant-cases.routes.js';
import { lpaQuestionnairesRoutes } from './lpa-questionnaires/lpa-questionnaires.routes.js';
import { appealAllocationRouter } from './appeal-allocation/appeal-allocation-routes.js';
import { documentsRoutes } from './documents/documents.routes.js';
import { integrationsRoutes } from './integrations/integrations.routes.js';
import initNotifyClientAndAddToRequest from '../middleware/init-notify-client-and-add-to-request.js';
import { knowledgeOfOtherLandownersRoutes } from './knowledge-of-other-landowners/knowledge-of-other-landowners.routes.js';
import { lpaNotificationMethodsRoutes } from './lpa-notification-methods/lpa-notification-methods.routes.js';
import { lpaDesignatedSitesRoutes } from './lpa-designated-sites/lpa-designated-sites.routes.js';
import { lpaQuestionnaireValidationOutcomesRoutes } from './lpa-questionnaire-validation-outcomes/lpa-questionnaire-validation-outcomes.routes.js';
import { procedureTypesRoutes } from './procedure-types/procedure-types.routes.js';
import { siteVisitTypesRoutes } from './site-visit-types/site-visit-types.routes.js';
import { appellantCaseValidationOutcomesRoutes } from './appellant-case-validation-outcomes/appellant-case-validation-outcomes.routes.js';
import { addressesRoutes } from './addresses/addresses.routes.js';
import { appealTimetablesRoutes } from './appeal-timetables/appeal-timetables.routes.js';
import { documentRedactionStatusesRoutes } from './document-redaction-statuses/document-redaction-statuses.routes.js';
import { auditTrailsRoutes } from './audit-trails/audit-trails.routes.js';
import { appealsDecisionRoutes } from './appeal-decision/appeal-decision.routes.js';
import { invalidAppealDecisionRoutes } from './invalid-appeal-decision/invalid-appeal-decision.routes.js';
import { changeAppealTypeRoutes } from './change-appeal-type/change-appeal-type.routes.js';
import { businessDaysRoutes } from './business-days/business-days.routes.js';
import { linkAppealsRoutes } from './link-appeals/link-appeals.routes.js';
import checkAzureAdUserIdHeaderExists from '#middleware/check-azure-ad-user-id-header-exists.js';
import { linkedAppealsRoutes } from './linkable-appeals/linkable-appeal.routes.js';
import { transferredAppealsRoutes } from './transferred-appeals/transferred-appeal.routes.js';
import { neighbouringSitesRoutes } from './neighbouring-sites/neighbouring-sites.routes.js';
import { serviceUserRoutes } from './service-user/service-user.routes.js';
import { withdrawalRoutes } from './withdrawal/withdrawal.routes.js';
import { representationRoutes } from './representations/representations.routes.js';
import { listedBuildingRoutes } from './listed-buildings/listed-buildings.routes.js';
import { caseNotesRoutes } from './case-notes/case-notes.routes.js';
import { representationRejectionReasonsRoutes } from './representation-rejection-reasons/representation-rejection-reasons.routes.js';
import { environmentalImpactAssessmentRoutes } from './environmental-impact-assessment/environmental-impact-assessment.routes.js';

import { default as appealDetailsRoutes } from './appeal-details/appeal-details.routes.js';

const router = createRouter();
router.use(integrationsRoutes);
router.use(businessDaysRoutes);

router.use('/', checkAzureAdUserIdHeaderExists);
router.use('/', initNotifyClientAndAddToRequest);

router.use(appellantCaseIncompleteReasonsRoutes);
router.use(appealAllocationRouter);
router.use(appellantCaseInvalidReasonsRoutes);
router.use(appellantCaseValidationOutcomesRoutes);
router.use(documentRedactionStatusesRoutes);
router.use(knowledgeOfOtherLandownersRoutes);
router.use(lpaNotificationMethodsRoutes);
router.use(lpaDesignatedSitesRoutes);
router.use(lpaQuestionnaireIncompleteReasonsRoutes);
router.use(lpaQuestionnaireValidationOutcomesRoutes);
router.use(procedureTypesRoutes);
router.use(siteVisitTypesRoutes);
router.use(representationRejectionReasonsRoutes);

router.use(appealsRoutes);
router.use(appealDetailsRoutes);
router.use(appealsDecisionRoutes);
router.use(invalidAppealDecisionRoutes);
router.use(addressesRoutes);
router.use(appealTimetablesRoutes);
router.use(appellantCasesRoutes);
router.use(auditTrailsRoutes);
router.use(documentsRoutes);
router.use(lpaQuestionnairesRoutes);
router.use(siteVisitRoutes);
router.use(changeAppealTypeRoutes);
router.use(linkAppealsRoutes);
router.use(neighbouringSitesRoutes);
router.use(serviceUserRoutes);
router.use(withdrawalRoutes);
router.use(environmentalImpactAssessmentRoutes);
router.use(representationRoutes);
router.use(listedBuildingRoutes);
router.use(caseNotesRoutes);

router.use(linkedAppealsRoutes);
router.use(transferredAppealsRoutes);

export { router as appealsRoutes };
