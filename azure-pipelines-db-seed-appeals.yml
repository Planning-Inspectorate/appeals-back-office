parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Dev
    values:
      - Dev
      - Test
      - Training
      - Prod
  - name: purge
    displayName: Purge and recreate data
    type: boolean
    default: false

pool: pins-odt-agent-pool

pr: none

trigger: none

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.17.0

variables:
  - template: variables/environments/${{ lower(parameters.environment )}}.yml@templates
  - group: pipeline_secrets

jobs:
  - deployment: Seed_DB
    displayName: Seed ${{ parameters.environment }} Database
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - checkout: self
            - template: steps/node_script.yml@templates
              parameters:
                script: npm ci
                nodeVersion: 22
            - template: steps/azure_auth.yml@templates
            # kv name is different in the training env (had to be shorter)
            - bash: |
                if [[ $ENVIRONMENT == "training" ]]; then
                  echo "Name: pins-kv-appeals-bo-train (env: $ENVIRONMENT)"
                  echo "##vso[task.setvariable variable=kvName;]pins-kv-appeals-bo-train"
                else
                  echo "Name: pins-kv-appeals-bo-$ENVIRONMENT (env: $ENVIRONMENT)"
                  echo "##vso[task.setvariable variable=kvName;]pins-kv-appeals-bo-$ENVIRONMENT"
                fi
              displayName: Set KV name
              env:
                ENVIRONMENT: $(ENVIRONMENT)
            - template: steps/azure_get_secrets.yml@templates
              parameters:
                keyVaultName: $(kvName)
                secrets:
                  - name: appeals-bo-sql-admin-connection-string
                    variable: appeals-bo-sql-admin-connection-string
            - template: steps/node_script.yml@templates
              parameters:
                condition: and(ne('${{ parameters.environment }}', 'Prod'), ne('${{ parameters.environment }}', 'Training'), eq('${{ parameters.purge }}', 'false'))
                environmentVariables:
                  DATABASE_URL: $(appeals-bo-sql-admin-connection-string)
                script: npm run db:seed:no-purge
                workingDirectory: $(Build.Repository.LocalPath)/appeals/api
            - template: steps/node_script.yml@templates
              parameters:
                condition: and(ne('${{ parameters.environment }}', 'Prod'), ne('${{ parameters.environment }}', 'Training'), eq('${{ parameters.purge }}', 'true'))
                environmentVariables:
                  DATABASE_URL: $(appeals-bo-sql-admin-connection-string)
                script: npm run db:seed
                workingDirectory: $(Build.Repository.LocalPath)/appeals/api
            - template: steps/node_script.yml@templates
              parameters:
                condition: eq('${{ parameters.environment }}', 'Training')
                environmentVariables:
                  DATABASE_URL: $(appeals-bo-sql-admin-connection-string)
                script: npm run db:seed:training
                workingDirectory: $(Build.Repository.LocalPath)/appeals/api
            - template: steps/node_script.yml@templates
              parameters:
                condition: eq('${{ parameters.environment }}', 'Prod')
                environmentVariables:
                  DATABASE_URL: $(appeals-bo-sql-admin-connection-string)
                script: npm run db:seed:prod
                workingDirectory: $(Build.Repository.LocalPath)/appeals/api
    workspace:
      clean: all
