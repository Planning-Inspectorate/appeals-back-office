parameters:
  - name: buildAppealsBoApi
    displayName: Build Appeals BO API
    type: boolean
    default: true
  - name: buildAppealsBoWeb
    displayName: Build Appeals BO Web
    type: boolean
    default: true
  - name: buildFunctions
    displayName: Build All Functions
    type: boolean
    default: true
  - name: buildAppealsBoPdf
    displayName: Build Appeals BO PDF
    type: boolean
    default: true

pr: none

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - infrastructure

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.24.0

extends:
  template: stages/wrapper_ci.yml@templates
  parameters:
    gitFetchDepth: 0
    globalVariables:
      - template: azure-pipelines-variables.yml@self
    validationJobs:
      - name: Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 22
              script: npm ci
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 22
              script: npm run tscheck
              environmentVariables:
                TURBO_TEAM: $(TURBO_TEAM)
                TURBO_API: $(TURBO_API)
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 22
              script: npm run lint:js
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 22
              script: npm run test
              environmentVariables:
                TURBO_TEAM: $(TURBO_TEAM)
                TURBO_API: $(TURBO_API)
                TURBO_TOKEN: $(TURBO_TOKEN)
      - name: Build Appeals BO PDF
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildAppealsBoPdf }}, 'true')
              ),
              ne(variables['Build.Reason'], 'Manual')
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/appeals/pdf-service-api/Dockerfile
              repository: back-office/back-office-appeals-pdf
              buildArgs:
                - GIT_SHA=$(Build.SourceVersion)
      - name: Build Appeals BO API
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildAppealsBoApi }}, 'true')
              ),
              ne(variables['Build.Reason'], 'Manual')
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/appeals/api/Dockerfile
              repository: back-office/back-office-appeals-api
              buildArgs:
                - GIT_SHA=$(Build.SourceVersion)
      - name: Build Appeals BO Web
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildAppealsBoWeb }}, 'true')
              ),
              ne(variables['Build.Reason'], 'Manual')
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/appeals/web/Dockerfile
              repository: back-office/appeals-web
              buildArgs:
                - GIT_SHA=$(Build.SourceVersion)
      - name: Build All Functions
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctions }}, 'true')
              ),
              ne(variables['Build.Reason'], 'Manual')
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          # install only function deps
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 22
              script: npm ci --only=prod --workspace=@pins/functions-bo-appeals-casedata-import --workspace=@pins/functions-bo-appeals-refdata-import --workspace=@pins/functions-bo-appeals-document-processing --workspace=@pins/functions-bo-appeals-scheduled-jobs

          # merge node modules
          - template: azure-pipelines-package-function-merge.yml@self
            parameters:
              appealsFolderNames:
                - 'casedata-import'
                - 'refdata-import'
                - 'document-processing'
                - 'scheduled-jobs'

          # package Appeals BO case data function
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'appeals'
              folderName: 'casedata-import'

          # package Appeals BO refdata function
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'appeals'
              folderName: 'refdata-import'

          # package Appeals BO document function
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'appeals'
              folderName: 'document-processing'

          # package Appeals BO scheduled jobs function
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'appeals'
              folderName: 'scheduled-jobs'
